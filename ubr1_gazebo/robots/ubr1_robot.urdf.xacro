<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="ubr1" >
  <xacro:include filename="$(find ubr1_description)/robots/ubr1_robot.urdf" />

  <!-- add gazebo stuff -->
  <gazebo reference="base_link">
    <kp>100000000.0</kp>
    <kd>10.0</kd>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <fdir1>1 0 0</fdir1>
    <maxVel>10.0</maxVel>
    <minDepth>0.0005</minDepth>
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="estop_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="right_gripper_joint">
    <implicitSpringDamper>1</implicitSpringDamper>
  </gazebo>
  <gazebo reference="left_gripper_joint">
    <implicitSpringDamper>1</implicitSpringDamper>
  </gazebo>
  <gazebo reference="right_gripper_finger_link">
    <material>Gazebo/Orange</material>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
  </gazebo>
  <gazebo reference="left_gripper_finger_link">
    <material>Gazebo/Orange</material>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <mu1>30.0</mu1>
    <mu2>30.0</mu2>
    <maxVel>1.0</maxVel>
    <minDepth>0.001</minDepth>
  </gazebo>
  <gazebo reference="torso_lift_link">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="fixed_torso_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="wrist_flex_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="elbow_flex_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="shoulder_lift_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="head_tilt_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="bellows_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="fixed_bellows_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="head_camera_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="right_wheel_link">
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <mu1>10</mu1>
    <mu2>10</mu2>
    <fdir1>1 0 0</fdir1>
    <maxVel>1.0</maxVel>
    <minDepth>0.003</minDepth>
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="left_wheel_link">
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <mu1>10</mu1>
    <mu2>10</mu2>
    <fdir1>1 0 0</fdir1>
    <maxVel>1.0</maxVel>
    <minDepth>0.003</minDepth>
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="base_l_wheel_joint">
    <implicitSpringDamper>1</implicitSpringDamper>
  </gazebo>
  <gazebo reference="base_r_wheel_joint">
    <implicitSpringDamper>1</implicitSpringDamper>
  </gazebo>

  <!-- head camera -->
  <gazebo reference="head_camera_rgb_frame">
    <sensor type="depth" name="camera">
      <always_on>true</always_on>
      <update_rate>15.0</update_rate>
      <camera>
        <horizontal_fov>1.047197</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>3.5</far>
        </clip>
      </camera>
      <plugin name="head_camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.1</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <cameraName>head_camera</cameraName>
        <imageTopicName>/head_camera/rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>/head_camera/rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/head_camera/depth_registered/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>/head_camera/depth_registered/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>/head_camera/depth_registered/points</pointCloudTopicName>
        <frameName>head_camera_rgb_optical_frame</frameName>
        <pointCloudCutoff>0.35</pointCloudCutoff>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <!-- hokuyo -->
  <gazebo reference="base_laser_link">
    <sensor type="ray" name="base_laser">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>700</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>20.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_base_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/base_scan</topicName>
        <frameName>base_laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Drivers -->
  <gazebo>
    <plugin name="ubr1_gazebo_ros_control_plugin" filename="libUBR1GazeboPlugin.so"/>
  </gazebo>

</robot>
